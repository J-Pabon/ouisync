[package]
name = "ouisync"
description = "Secure P2P file sharing (shared library)"
publish = false
authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true
version.workspace = true

[[bench]]
name = "bench_lib"
harness = false

[dependencies]
argon2 = "0.4.0"
async-recursion = "1.0.0"
async-trait   = "0.1.56"
backoff = "0.4.0"
base64 = "0.13.0"
bincode = "1.3"
blake3 = { version = "1.3.0", features = ["traits-preview"] }
btdht = { workspace = true }
bytes = "1.1.0"
camino = "1.0.5"
chacha20 = "0.9.0"
chrono = "0.4.19"
ed25519-dalek = { version = "1", features = ["serde"] }
either = { version = "1.6.1", default-features = false }
futures-util = { version = "0.3.21", default-features = false }
generic-array = { version = "0.14.5", features = ["serde"] }
hex = "0.4.3"
net = { package = "ouisync-net", path = "../net" }
noise-protocol = "0.1.3"
noise-rust-crypto = { version = "0.5.0", default-features = false, features = ["use-x25519", "use-chacha20poly1305", "use-blake2"] }
once_cell = "1.12.0"
quinn = { git = "https://github.com/quinn-rs/quinn", rev = "f7203ee382f6ac91456e155d380c0d7cccaf8e66" }
quinn_udp = { package = "quinn-udp", git = "https://github.com/quinn-rs/quinn", rev = "f7203ee382f6ac91456e155d380c0d7cccaf8e66" }
quinn_proto = { package = "quinn-proto", git = "https://github.com/quinn-rs/quinn", rev = "f7203ee382f6ac91456e155d380c0d7cccaf8e66" }
rcgen = "0.9.1"
rand = { package = "ouisync-rand", path = "../rand" }
rupnp = { version = "1.1.0", default-features = false, features = [] }
serde = { version = "1.0", features = ["derive", "rc"] }
slab = "0.4.6"
sqlx = { version = "0.6.2", default-features = false, features = ["runtime-tokio-rustls", "sqlite"] }
ssdp-client = "1.0"
thiserror = "1.0.31"
rustls = { version = "0.20.3", default-features = false, features = ["quic", "dangerous_configuration"] }
tokio = { workspace = true }
tokio-stream = "0.1.9"
tokio-util = "0.7.3"
tracing = { workspace = true }
tracing-subscriber = { workspace = true, features = [ "env-filter" ] }
twox-hash = { version = "1.6.3", default-features = false }
urlencoding = "2.1.0"
vint64 = "1.0.1"
zeroize = "1.2.0"

# Using these to find out network interfaces. The `nix` package supports
# Android out of the box, but doesn't support Windows. The `network-interfaces`
# package doesn't officially support Android, though it looks as it shouldn't
# be too big of a problem to do so (TODO). The latter also doesn't export
# whether an interface supports multicast (only broadcast).
[target.'cfg(unix)'.dependencies]
nix = "0.25.0"
[target.'cfg(windows)'.dependencies]
network-interface = "0.1.3"

[dev-dependencies]
assert_matches = "1.5"
criterion = { version = "0.4", features = ["html_reports"] }
iai = "0.1.1"
proptest = "1.0"
tempfile = "3.2"
test-strategy = "0.2.1"
tokio = { workspace = true, features = ["test-util"] }

[features]
simulation = ["rand/simulation"]
