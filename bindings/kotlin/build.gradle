plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    id 'org.jetbrains.kotlin.jvm' version '1.9.0'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use the Kotlin JUnit 5 integration.
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'

    // Use the JUnit 5 integration.
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.3'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation group: 'net.java.dev.jna', name: 'jna', version: '5.13.0'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

test {
    testLogging {
        showStandardStreams = true
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.register('buildNative', CargoBuildTask) {
    group 'build'
    description 'Build the native library'

    crate = 'ouisync-ffi'
    libname = 'ouisync_ffi'
    // target = 'aarch64-linux-android'
    workingDir = file('../..')
}

tasks.named('classes') {
    dependsOn('buildNative')
}

tasks.named('test') {
    systemProperty(
        'jna.library.path',
        layout.buildDirectory.dir('native').get().getAsFile()
    )
}

