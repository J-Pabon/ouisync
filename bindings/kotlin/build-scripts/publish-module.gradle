apply plugin: 'maven-publish'
apply plugin: 'signing'

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        from android.sourceSets.main.java.srcDirs
    }
}

artifacts {
    archives androidSourcesJar
}

group = PUBLISH_GROUP_ID

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                // The coordinates of the library, being set from variables that
                // we'll set up later
                groupId PUBLISH_GROUP_ID
                artifactId PUBLISH_ARTIFACT_ID

                // Two artifacts, the `aar` (or `jar`) and the sources
                artifact androidSourcesJar
                artifact("$rootDir/build/lib/outputs/aar/lib-release.aar")

                pom {
                    name = PUBLISH_ARTIFACT_ID
                    description = 'Library to enable decentralized web requests'
                    url = 'https://github.com/equalitie/ouisync'
                    licenses {
                        license {
                            name = 'MPL-2.0'
                            url = 'https://github.com/equalitie/ouisync/blob/master/LICENSE'
                        }
                    }
                    developers {
                        developer {
                            name = 'Ouisync Developers'
                            email = 'ouisync@equalit.ie'
                        }
                    }

                    scm {
                        connection = 'scm:git:github.com/equalitie/ouisync.git'
                        developerConnection = 'scm:git:ssh://github.com/equalitie/ouisync.git'
                        url = 'https://github.com/equalitie/ouisync/tree/master'
                    }
                }
            }
        }
    }
}

signing {
    if (signingKey) {
        useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
    }
    sign publishing.publications
}
