plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'org.mozilla.rust-android-gradle.rust-android' version '0.9.3'
}

android {
    compileSdkVersion 33
    ndkVersion '25.2.9519653'

    namespace 'org.equalitie.ouisync'

    sourceSets {
        main {
            kotlin {
                // Add directory with generated source files
                srcDir layout.buildDirectory.dir('gen')
            }
        }
    }

    defaultConfig {
        targetSdkVersion 33
        minSdkVersion 21
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }
}

dependencies {
    implementation 'net.java.dev.jna:jna:5.13.0@aar'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3'
    implementation 'org.msgpack:msgpack-core:0.9.5'



    // testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    // testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3'
    // testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.3'

    // testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// test {
//     useJUnitPlatform()

//     testLogging {
//         showStandardStreams true
//         exceptionFormat "full"
//     }
// }

cargo {
    module = "$rootDir/../.."
    libname = 'ouisync_ffi'
    targets = ['arm', 'arm64', /* 'x86', */ 'x86_64']
    profile = 'release'

    extraCargoBuildArguments = ['--package', 'ouisync-ffi']
}

tasks.register('generateBindings', Exec) {
    description 'Generate bindings'
    workingDir "$rootDir/../.."
    commandLine 'cargo', 'run', '--package', 'ouisync-bindgen', '--', '--language', 'kotlin'

    doFirst {
        def dir = layout.buildDirectory.dir('gen').get().getAsFile()
        mkdir(dir)
        standardOutput = new FileOutputStream("$dir/Bindings.kt")
    }
}

tasks.named('preBuild') {
    dependsOn 'cargoBuild'
    dependsOn 'generateBindings'
}

// tasks.register('buildTestNative', Exec) {
//     description 'Build the native library'
//     workingDir "$rootDir/../.."
//     commandLine 'cargo', 'build', '--package', 'ouisync-ffi', '--lib'
// }

// tasks.named('test') {
//     dependsOn 'buildTestNative'
//     systemProperty('jna.library.path', "$rootDir/../../target/debug")
// }

